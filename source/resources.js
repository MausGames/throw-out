/////////////////////////////////////////////////////
//*-----------------------------------------------*//
//| Part of Throw Out (https://www.maus-games.at) |//
//*-----------------------------------------------*//
//| Released under the zlib License               |//
//| More information available in the readme file |//
//*-----------------------------------------------*//
/////////////////////////////////////////////////////
"use strict";
const RES = {};


// ****************************************************************
RES.cBackground = {};
RES.cBackground.s_sVertexShader =
"attribute vec3 a_v3Position;"                +
"varying   vec2 v_v2Relative;"                +
""                                            +
"void main()"                                 +
"{"                                           +
"    gl_Position  = vec4(a_v3Position, 1.0);" +
"    v_v2Relative = a_v3Position.xy;"         +
"}";

RES.cBackground.s_sFragmentShader =
"precision mediump float;"                                                    +
""                                                                            +
"uniform float u_fAlpha;"                                                     +
"varying vec2  v_v2Relative;"                                                 +
""                                                                            +
"void main()"                                                                 +
"{"                                                                           +
"    float fIntensity = 0.25 * inversesqrt(dot(v_v2Relative, v_v2Relative));" +
"    gl_FragColor = vec4(vec3(fIntensity), u_fAlpha);"                        +
"}";


// ****************************************************************
RES.cBall = {};
RES.cBall.s_afVertexData =
[ 0.000000,  0.000000,  0.000000,  0.0,  0.0,  0.0,  0.0,  0.0,   // unused vertex
  0.000000, -1.000000,  0.000000,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.723607, -0.447220,  0.525725,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.276388, -0.447220,  0.850649,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.894426, -0.447216,  0.000000,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.276388, -0.447220, -0.850649,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.723607, -0.447220, -0.525725,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.276388,  0.447220,  0.850649,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.723607,  0.447220,  0.525725,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.723607,  0.447220, -0.525725,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.276388,  0.447220, -0.850649,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.894426,  0.447216,  0.000000,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.000000, 1.000000,  0.000000,   0.0,  0.0,  0.0,  0.0,  0.0,
  0.203181, -0.967950,  0.147618,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.425323, -0.850654,  0.309011,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.609547, -0.657519,  0.442856,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.531941, -0.502302,  0.681712,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.262869, -0.525738,  0.809012,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.029639, -0.502302,  0.864184,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.232822, -0.657519,  0.716563,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.162456, -0.850654,  0.499995,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.077607, -0.967950,  0.238853,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.203181, -0.967950, -0.147618,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.425323, -0.850654, -0.309011,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.609547, -0.657519, -0.442856,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.812729, -0.502301, -0.295238,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.850648, -0.525736,  0.000000,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.812729, -0.502301,  0.295238,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.483971, -0.502302,  0.716565,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.688189, -0.525736,  0.499997,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.831051, -0.502299,  0.238853,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.753442, -0.657515,  0.000000,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.525730, -0.850652,  0.000000,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.251147, -0.967949,  0.000000,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.831051, -0.502299, -0.238853,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.688189, -0.525736, -0.499997,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.483971, -0.502302, -0.716565,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.232822, -0.657519, -0.716563,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.162456, -0.850654, -0.499995,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.077607, -0.967950, -0.238853,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.029639, -0.502302, -0.864184,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.262869, -0.525738, -0.809012,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.531941, -0.502302, -0.681712,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.860698, -0.251151, -0.442858,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.951058,  0.000000, -0.309013,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.956626,  0.251149, -0.147618,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.956626,  0.251149,  0.147618,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.951058, -0.000000,  0.309013,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.860698, -0.251151,  0.442858,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.687159, -0.251152,  0.681715,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.587786,  0.000000,  0.809017,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.436007,  0.251152,  0.864188,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.155215,  0.251152,  0.955422,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.000000, -0.000000, 1.000000,   0.0,  0.0,  0.0,  0.0,  0.0,
 -0.155215, -0.251152,  0.955422,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.436007, -0.251152,  0.864188,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.587786,  0.000000,  0.809017,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.687159,  0.251152,  0.681715,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.860698,  0.251151,  0.442858,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.951058, -0.000000,  0.309013,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.956626, -0.251149,  0.147618,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.956626, -0.251149, -0.147618,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.951058,  0.000000, -0.309013,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.860698,  0.251151, -0.442858,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.687159,  0.251152, -0.681715,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.587786, -0.000000, -0.809017,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.436007, -0.251152, -0.864188,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.155215, -0.251152, -0.955422,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.000000,  0.000000, -1.000000,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.155215,  0.251152, -0.955422,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.436007,  0.251152, -0.864188,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.587786, -0.000000, -0.809017,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.687159, -0.251152, -0.681715,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.831051,  0.502299,  0.238853,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.688189,  0.525736,  0.499997,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.483971,  0.502302,  0.716565,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.029639,  0.502302,  0.864184,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.262869,  0.525738,  0.809012,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.531941,  0.502302,  0.681712,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.812729,  0.502301,  0.295238,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.850648,  0.525736,  0.000000,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.812729,  0.502301, -0.295238,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.531941,  0.502302, -0.681712,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.262869,  0.525738, -0.809012,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.029639,  0.502302, -0.864184,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.483971,  0.502302, -0.716565,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.688189,  0.525736, -0.499997,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.831051,  0.502299, -0.238853,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.753442,  0.657515,  0.000000,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.525730,  0.850652,  0.000000,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.251147,  0.967949,  0.000000,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.077607,  0.967950,  0.238853,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.162456,  0.850654,  0.499995,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.232822,  0.657519,  0.716563,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.203181,  0.967950,  0.147618,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.425323,  0.850654,  0.309011,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.609547,  0.657519,  0.442856,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.203181,  0.967950, -0.147618,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.425323,  0.850654, -0.309011,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.609547,  0.657519, -0.442856,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.077607,  0.967950, -0.238853,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.162456,  0.850654, -0.499995,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.232822,  0.657519, -0.716563,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.052790, -0.723612,  0.688185,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.138199, -0.894429,  0.425321,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.361805, -0.723611,  0.587779,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.670817, -0.723611, -0.162457,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.670818, -0.723610,  0.162458,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.447211, -0.894428,  0.000001,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.638195, -0.723609,  0.262864,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.361801, -0.894428,  0.262864,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.447211, -0.723610,  0.525729,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.447211, -0.723612, -0.525727,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.361801, -0.894429, -0.262863,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.638195, -0.723609, -0.262863,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.361803, -0.723612, -0.587779,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.138197, -0.894429, -0.425321,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.052789, -0.723611, -0.688186,  0.0,  0.0,  0.0,  0.0,  0.0,
  1.000000,  0.000000,  0.000000,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.947213, -0.276396,  0.162458,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.947213, -0.276396, -0.162458,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.309017,  0.000000,  0.951056,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.138199, -0.276398,  0.951055,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.447216, -0.276398,  0.850648,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.809018,  0.000000,  0.587783,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.861803, -0.276396,  0.425324,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.670819, -0.276397,  0.688191,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.809018, -0.000000, -0.587783,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.670819, -0.276397, -0.688191,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.861803, -0.276396, -0.425324,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.309017, -0.000000, -0.951056,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.447216, -0.276398, -0.850648,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.138199, -0.276398, -0.951055,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.670820,  0.276396,  0.688190,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.809019, -0.000002,  0.587783,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.861804,  0.276394,  0.425323,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.447216,  0.276397,  0.850648,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.309017, -0.000001,  0.951056,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.138199,  0.276397,  0.951055,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.947213,  0.276396, -0.162458,  0.0,  0.0,  0.0,  0.0,  0.0,
 -1.000000,  0.000001,  0.000000,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.947213,  0.276397,  0.162458,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.138199,  0.276397, -0.951055,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.309016, -0.000000, -0.951057,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.447215,  0.276397, -0.850649,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.861804,  0.276396, -0.425322,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.809019,  0.000000, -0.587782,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.670821,  0.276397, -0.688189,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.361800,  0.894429,  0.262863,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.447209,  0.723612,  0.525728,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.638194,  0.723610,  0.262864,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.138197,  0.894430,  0.425319,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.361804,  0.723612,  0.587778,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.052790,  0.723612,  0.688185,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.447210,  0.894429,  0.000000,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.670817,  0.723611, -0.162457,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.670817,  0.723611,  0.162457,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.138197,  0.894430, -0.425319,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.052790,  0.723612, -0.688185,  0.0,  0.0,  0.0,  0.0,  0.0,
 -0.361804,  0.723612, -0.587778,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.361800,  0.894429, -0.262863,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.638194,  0.723610, -0.262864,  0.0,  0.0,  0.0,  0.0,  0.0,
  0.447209,  0.723612, -0.525728,  0.0,  0.0,  0.0,  0.0,  0.0];

RES.cBall.s_aiIndexData =
[1, 13, 21, 2, 15, 27, 1, 21, 33, 1, 33, 39, 1, 39, 22, 2, 27, 48, 3, 18, 54, 4, 30, 60, 5, 36, 66, 6, 42, 72, 2, 48, 49, 3, 54, 55, 4, 60, 61, 5, 66, 67, 6, 72, 43, 7, 75, 93, 8, 78, 96, 9, 81, 99, 10, 84, 102, 11, 87, 88, 19, 18, 3, 20, 103, 19, 21, 104, 20, 19, 103, 18, 103, 17, 18, 20, 104, 103, 104, 105, 103, 103, 105, 17, 105, 16, 17, 21, 13, 104, 13, 14, 104, 104, 14, 105, 14, 15, 105, 105, 15, 16, 15, 2, 16, 25, 24, 6, 26, 106, 25, 27, 107, 26, 25, 106, 24, 106, 23, 24, 26, 107, 106, 107, 108, 106, 106, 108, 23, 108, 22, 23, 27, 15, 107, 15, 14, 107, 107, 14, 108, 14, 13, 108, 108, 13, 22, 13, 1, 22, 31, 30, 4, 32, 109, 31, 33, 110, 32, 31, 109, 30, 109, 29, 30, 32, 110, 109, 110, 111, 109, 109, 111, 29, 111, 28, 29, 33, 21, 110, 21, 20, 110, 110, 20, 111, 20, 19, 111, 111, 19, 28, 19, 3, 28, 37, 36, 5, 38, 112, 37, 39, 113, 38, 37, 112, 36, 112, 35, 36, 38, 113, 112, 113, 114, 112, 112, 114, 35, 114, 34, 35, 39, 33, 113, 33, 32, 113, 113, 32, 114, 32, 31, 114, 114, 31, 34, 31, 4, 34, 24, 42, 6, 23, 115, 24, 22, 116, 23, 24, 115, 42, 115, 41, 42, 23, 116, 115, 116, 117, 115, 115, 117, 41, 117, 40, 41, 22, 39, 116, 39, 38, 116, 116, 38, 117, 38, 37, 117, 117, 37, 40, 37, 5, 40, 46, 45, 11, 47, 118, 46, 48, 119, 47, 46, 118, 45, 118, 44, 45, 47, 119, 118, 119, 120, 118, 118, 120, 44, 120, 43, 44, 48, 27, 119, 27, 26, 119, 119, 26, 120, 26, 25, 120, 120, 25, 43, 25, 6, 43, 52, 51, 7, 53, 121, 52, 54, 122, 53, 52, 121, 51, 121, 50, 51, 53, 122, 121, 122, 123, 121, 121, 123, 50, 123, 49, 50, 54, 18, 122, 18, 17, 122, 122, 17, 123, 17, 16, 123, 123, 16, 49, 16, 2, 49, 58, 57, 8, 59, 124, 58, 60, 125, 59, 58, 124, 57, 124, 56, 57, 59, 125, 124, 125, 126, 124, 124, 126, 56, 126, 55, 56, 60, 30, 125, 30, 29, 125, 125, 29, 126, 29, 28, 126, 126, 28, 55, 28, 3, 55, 64, 63, 9, 65, 127, 64, 66, 128, 65, 64, 127, 63, 127, 62, 63, 65, 128, 127, 128, 129, 127, 127, 129, 62, 129, 61, 62, 66, 36, 128, 36, 35, 128, 128, 35, 129, 35, 34, 129, 129, 34, 61, 34, 4, 61, 70, 69, 10, 71, 130, 70, 72, 131, 71, 70, 130, 69, 130, 68, 69, 71, 131, 130, 131, 132, 130, 130, 132, 68, 132, 67, 68, 72, 42, 131, 42, 41, 131, 131, 41, 132, 41, 40, 132, 132, 40, 67, 40, 5, 67, 51, 75, 7, 50, 133, 51, 49, 134, 50, 51, 133, 75, 133, 74, 75, 50, 134, 133, 134, 135, 133, 133, 135, 74, 135, 73, 74, 49, 48, 134, 48, 47, 134, 134, 47, 135, 47, 46, 135, 135, 46, 73, 46, 11, 73, 57, 78, 8, 56, 136, 57, 55, 137, 56, 57, 136, 78, 136, 77, 78, 56, 137, 136, 137, 138, 136, 136, 138, 77, 138, 76, 77, 55, 54, 137, 54, 53, 137, 137, 53, 138, 53, 52, 138, 138, 52, 76, 52, 7, 76, 63, 81, 9, 62, 139, 63, 61, 140, 62, 63, 139, 81, 139, 80, 81, 62, 140, 139, 140, 141, 139, 139, 141, 80, 141, 79, 80, 61, 60, 140, 60, 59, 140, 140, 59, 141, 59, 58, 141, 141, 58, 79, 58, 8, 79, 69, 84, 10, 68, 142, 69, 67, 143, 68, 69, 142, 84, 142, 83, 84, 68, 143, 142, 143, 144, 142, 142, 144, 83, 144, 82, 83, 67, 66, 143, 66, 65, 143, 143, 65, 144, 65, 64, 144, 144, 64, 82, 64, 9, 82, 45, 87, 11, 44, 145, 45, 43, 146, 44, 45, 145, 87, 145, 86, 87, 44, 146, 145, 146, 147, 145, 145, 147, 86, 147, 85, 86, 43, 72, 146, 72, 71, 146, 146, 71, 147, 71, 70, 147, 147, 70, 85, 70, 10, 85, 91, 90, 12, 92, 148, 91, 93, 149, 92, 91, 148, 90, 148, 89, 90, 92, 149, 148, 149, 150, 148, 148, 150, 89, 150, 88, 89, 93, 75, 149, 75, 74, 149, 149, 74, 150, 74, 73, 150, 150, 73, 88, 73, 11, 88, 94, 91, 12, 95, 151, 94, 96, 152, 95, 94, 151, 91, 151, 92, 91, 95, 152, 151, 152, 153, 151, 151, 153, 92, 153, 93, 92, 96, 78, 152, 78, 77, 152, 152, 77, 153, 77, 76, 153, 153, 76, 93, 76, 7, 93, 97, 94, 12, 98, 154, 97, 99, 155, 98, 97, 154, 94, 154, 95, 94, 98, 155, 154, 155, 156, 154, 154, 156, 95, 156, 96, 95, 99, 81, 155, 81, 80, 155, 155, 80, 156, 80, 79, 156, 156, 79, 96, 79, 8, 96, 100, 97, 12, 101, 157, 100, 102, 158, 101, 100, 157, 97, 157, 98, 97, 101, 158, 157, 158, 159, 157, 157, 159, 98, 159, 99, 98, 102, 84, 158, 84, 83, 158, 158, 83, 159, 83, 82, 159, 159, 82, 99, 82, 9, 99, 90, 100, 12, 89, 160, 90, 88, 161, 89, 90, 160, 100, 160, 101, 100, 89, 161, 160, 161, 162, 160, 160, 162, 101, 162, 102, 101, 88, 87, 161, 87, 86, 161, 161, 86, 162, 86, 85, 162, 162, 85, 102, 85, 10, 102];

RES.cBall.s_sVertexShader =
"attribute vec3 a_v3Position;"                                      +
"uniform   mat4 u_m4ModelViewProj;"                                 +
"uniform   mat4 u_m4ModelView;"                                     +
"varying   vec3 v_v3Relative;"                                      +
"varying   vec3 v_v3Normal;"                                        +
""                                                                  +
"void main()"                                                       +
"{"                                                                 +
"    v_v3Relative = (u_m4ModelView * vec4(a_v3Position, 1.0)).xyz;" +
"    v_v3Normal   = a_v3Position;"                                  +
""                                                                  +
"    gl_Position  = u_m4ModelViewProj * vec4(a_v3Position, 1.0);"   +
"}";

RES.cBall.s_sFragmentShader =
"precision mediump float;"                                                    +
""                                                                            +
"uniform float u_fAlpha;"                                                     +
"varying vec3  v_v3Relative;"                                                 +
"varying vec3  v_v3Normal;"                                                   +
""                                                                            +
"void main()"                                                                 +
"{"                                                                           +
"    const vec3 v3Camera = vec3(0.0, 0.447213650, -0.894427299);"             +
"    const vec3 v3Light  = vec3(0.0,         0.0,          1.0);"             +
""                                                                            +
"    float fIntensity = 43.0 * inversesqrt(dot(v_v3Relative, v_v3Relative));" +
"    fIntensity      *= dot(normalize(v_v3Relative), v3Camera);"              +
""                                                                            +
"    fIntensity *= dot(normalize(v_v3Normal), v3Light)*0.5+0.5;"              +
""                                                                            +
"    gl_FragColor = vec4(vec3(fIntensity), u_fAlpha);"                        +
"}";


// ****************************************************************
RES.cBlock = {};
RES.cBlock.s_afVertexData =
[-0.587036, -0.587036, -0.391357,  0.0,  0.0, -0.524369, -0.524369, -0.670858,
 -0.587036,  0.587036, -0.391357,  0.0,  0.0, -0.524369,  0.524369, -0.670858,
  0.587036,  0.587036, -0.391357,  0.0,  0.0,  0.524369,  0.524369, -0.670858,
  0.587036, -0.587036, -0.391357,  0.0,  0.0,  0.524369, -0.524369, -0.670858,
 -0.587036, -0.587036,  0.391357,  0.0,  0.0, -0.524369, -0.524369,  0.670858,
 -0.587036,  0.587036,  0.391357,  0.0,  0.0, -0.524369,  0.524369,  0.670858,
  0.587036,  0.587036,  0.391357,  0.0,  0.0,  0.524369,  0.524369,  0.670858,
  0.587036, -0.587036,  0.391357,  0.0,  0.0,  0.524369, -0.524369,  0.670858,
 -0.617343, -0.414038,  0.411562,  0.0,  0.0, -0.598956, -0.121036,  0.791528,
 -0.626202, -0.145471,  0.417468,  0.0,  0.0, -0.594012, -0.018525,  0.804224,
 -0.626202,  0.145471,  0.417468,  0.0,  0.0, -0.594012,  0.018525,  0.804224,
 -0.617343,  0.414038,  0.411562,  0.0,  0.0, -0.598956,  0.121036,  0.791528,
 -0.617343,  0.617343,  0.276025,  0.0,  0.0, -0.690909,  0.690909,  0.212683,
 -0.626202,  0.626202,  0.096981,  0.0,  0.0, -0.706656,  0.706656,  0.034577,
 -0.626202,  0.626202, -0.096981,  0.0,  0.0, -0.706656,  0.706656, -0.034577,
 -0.617343,  0.617343, -0.276025,  0.0,  0.0, -0.690909,  0.690909, -0.212683,
 -0.617343,  0.414038, -0.411562,  0.0,  0.0, -0.598956,  0.121036, -0.791528,
 -0.626202,  0.145471, -0.417468,  0.0,  0.0, -0.594012,  0.018525, -0.804224,
 -0.626202, -0.145471, -0.417468,  0.0,  0.0, -0.594012, -0.018525, -0.804224,
 -0.617343, -0.414038, -0.411562,  0.0,  0.0, -0.598956, -0.121036, -0.791528,
 -0.617343, -0.617343, -0.276025,  0.0,  0.0, -0.690909, -0.690909, -0.212683,
 -0.626202, -0.626202, -0.096981,  0.0,  0.0, -0.706656, -0.706656, -0.034577,
 -0.626202, -0.626202,  0.096981,  0.0,  0.0, -0.706656, -0.706656,  0.034577,
 -0.617343, -0.617343,  0.276025,  0.0,  0.0, -0.690909, -0.690909,  0.212683,
 -0.414038,  0.617343,  0.411562,  0.0,  0.0, -0.121036,  0.598956,  0.791528,
 -0.145471,  0.626202,  0.417468,  0.0,  0.0, -0.018525,  0.594012,  0.804224,
  0.145471,  0.626202,  0.417468,  0.0,  0.0,  0.018525,  0.594012,  0.804224,
  0.414038,  0.617343,  0.411562,  0.0,  0.0,  0.121036,  0.598956,  0.791528,
  0.617343,  0.617343,  0.276025,  0.0,  0.0,  0.690909,  0.690909,  0.212683,
  0.626202,  0.626202,  0.096981,  0.0,  0.0,  0.706656,  0.706656,  0.034577,
  0.626202,  0.626202, -0.096981,  0.0,  0.0,  0.706656,  0.706656, -0.034577,
  0.617343,  0.617343, -0.276025,  0.0,  0.0,  0.690909,  0.690909, -0.212683,
  0.414038,  0.617343, -0.411562,  0.0,  0.0,  0.121036,  0.598956, -0.791528,
  0.145471,  0.626202, -0.417468,  0.0,  0.0,  0.018525,  0.594012, -0.804224,
 -0.145471,  0.626202, -0.417468,  0.0,  0.0, -0.018525,  0.594012, -0.804224,
 -0.414038,  0.617343, -0.411562,  0.0,  0.0, -0.121036,  0.598956, -0.791528,
  0.617343,  0.414038,  0.411562,  0.0,  0.0,  0.598956,  0.121036,  0.791528,
  0.626202,  0.145471,  0.417468,  0.0,  0.0,  0.594012,  0.018525,  0.804224,
  0.626202, -0.145471,  0.417468,  0.0,  0.0,  0.594012, -0.018525,  0.804224,
  0.617343, -0.414038,  0.411562,  0.0,  0.0,  0.598956, -0.121036,  0.791528,
  0.617343, -0.617343,  0.276025,  0.0,  0.0,  0.690909, -0.690909,  0.212683,
  0.626202, -0.626202,  0.096981,  0.0,  0.0,  0.706656, -0.706656,  0.034577,
  0.626202, -0.626202, -0.096981,  0.0,  0.0,  0.706656, -0.706656, -0.034577,
  0.617343, -0.617343, -0.276025,  0.0,  0.0,  0.690909, -0.690909, -0.212683,
  0.617343, -0.414038, -0.411562,  0.0,  0.0,  0.598956, -0.121036, -0.791528,
  0.626202, -0.145471, -0.417468,  0.0,  0.0,  0.594012, -0.018525, -0.804224,
  0.626202,  0.145471, -0.417468,  0.0,  0.0,  0.594012,  0.018525, -0.804224,
  0.617343,  0.414038, -0.411562,  0.0,  0.0,  0.598956,  0.121036, -0.791528,
  0.414038, -0.617343,  0.411562,  0.0,  0.0,  0.121036, -0.598956,  0.791528,
  0.145471, -0.626202,  0.417468,  0.0,  0.0,  0.018525, -0.594012,  0.804224,
 -0.145471, -0.626202,  0.417468,  0.0,  0.0, -0.018525, -0.594012,  0.804224,
 -0.414038, -0.617343,  0.411562,  0.0,  0.0, -0.121036, -0.598956,  0.791528,
 -0.414038, -0.617343, -0.411562,  0.0,  0.0, -0.121036, -0.598956, -0.791528,
 -0.145471, -0.626202, -0.417468,  0.0,  0.0, -0.018525, -0.594012, -0.804224,
  0.145471, -0.626202, -0.417468,  0.0,  0.0,  0.018525, -0.594012, -0.804224,
  0.414038, -0.617343, -0.411562,  0.0,  0.0,  0.121036, -0.598956, -0.791528,
 -0.697504, -0.419412,  0.279608,  0.0,  0.0, -0.932707, -0.200110,  0.299997,
 -0.717899, -0.421313,  0.097426,  0.0,  0.0, -0.968505, -0.243416,  0.052126,
 -0.717899, -0.421313, -0.097426,  0.0,  0.0, -0.968505, -0.243416, -0.052126,
 -0.697504, -0.419412, -0.279608,  0.0,  0.0, -0.932707, -0.200110, -0.299997,
 -0.717899, -0.146140,  0.280876,  0.0,  0.0, -0.937651, -0.033265,  0.345927,
 -0.741614, -0.146356,  0.097571,  0.0,  0.0, -0.997009, -0.042848,  0.064150,
 -0.741614, -0.146356, -0.097571,  0.0,  0.0, -0.997009, -0.042848, -0.064150,
 -0.717899, -0.146140, -0.280876,  0.0,  0.0, -0.937651, -0.033265, -0.345927,
 -0.717899,  0.146140,  0.280876,  0.0,  0.0, -0.937651,  0.033265,  0.345927,
 -0.741614,  0.146356,  0.097571,  0.0,  0.0, -0.997009,  0.042848,  0.064150,
 -0.741614,  0.146356, -0.097571,  0.0,  0.0, -0.997009,  0.042848, -0.064150,
 -0.717899,  0.146140, -0.280876,  0.0,  0.0, -0.937651,  0.033265, -0.345927,
 -0.697504,  0.419412,  0.279608,  0.0,  0.0, -0.932707,  0.200110,  0.299997,
 -0.717899,  0.421313,  0.097426,  0.0,  0.0, -0.968505,  0.243416,  0.052126,
 -0.717899,  0.421313, -0.097426,  0.0,  0.0, -0.968505,  0.243416, -0.052126,
 -0.697504,  0.419412, -0.279608,  0.0,  0.0, -0.932707,  0.200110, -0.299997,
 -0.419412,  0.697504,  0.279608,  0.0,  0.0, -0.200110,  0.932707,  0.299997,
 -0.421313,  0.717899,  0.097426,  0.0,  0.0, -0.243416,  0.968505,  0.052126,
 -0.421313,  0.717899, -0.097426,  0.0,  0.0, -0.243416,  0.968505, -0.052126,
 -0.419412,  0.697504, -0.279608,  0.0,  0.0, -0.200110,  0.932707, -0.299997,
 -0.146140,  0.717899,  0.280876,  0.0,  0.0, -0.033265,  0.937651,  0.345927,
 -0.146356,  0.741614,  0.097571,  0.0,  0.0, -0.042848,  0.997009,  0.064150,
 -0.146356,  0.741614, -0.097571,  0.0,  0.0, -0.042848,  0.997009, -0.064150,
 -0.146140,  0.717899, -0.280876,  0.0,  0.0, -0.033265,  0.937651, -0.345927,
  0.146140,  0.717899,  0.280876,  0.0,  0.0,  0.033265,  0.937651,  0.345927,
  0.146356,  0.741614,  0.097571,  0.0,  0.0,  0.042848,  0.997009,  0.064150,
  0.146356,  0.741614, -0.097571,  0.0,  0.0,  0.042848,  0.997009, -0.064150,
  0.146140,  0.717899, -0.280876,  0.0,  0.0,  0.033265,  0.937651, -0.345927,
  0.419412,  0.697504,  0.279608,  0.0,  0.0,  0.200110,  0.932707,  0.299997,
  0.421313,  0.717899,  0.097426,  0.0,  0.0,  0.243416,  0.968505,  0.052126,
  0.421313,  0.717899, -0.097426,  0.0,  0.0,  0.243416,  0.968505, -0.052126,
  0.419412,  0.697504, -0.279608,  0.0,  0.0,  0.200110,  0.932707, -0.299997,
  0.697504,  0.419412,  0.279608,  0.0,  0.0,  0.932707,  0.200110,  0.299997,
  0.717899,  0.421313,  0.097426,  0.0,  0.0,  0.968505,  0.243416,  0.052126,
  0.717899,  0.421313, -0.097426,  0.0,  0.0,  0.968505,  0.243416, -0.052126,
  0.697504,  0.419412, -0.279608,  0.0,  0.0,  0.932707,  0.200110, -0.299997,
  0.717899,  0.146140,  0.280876,  0.0,  0.0,  0.937651,  0.033265,  0.345927,
  0.741614,  0.146356,  0.097571,  0.0,  0.0,  0.997009,  0.042848,  0.064150,
  0.741614,  0.146356, -0.097571,  0.0,  0.0,  0.997009,  0.042848, -0.064150,
  0.717899,  0.146140, -0.280876,  0.0,  0.0,  0.937651,  0.033265, -0.345927,
  0.717899, -0.146140,  0.280876,  0.0,  0.0,  0.937651, -0.033265,  0.345927,
  0.741614, -0.146356,  0.097571,  0.0,  0.0,  0.997009, -0.042848,  0.064150,
  0.741614, -0.146356, -0.097571,  0.0,  0.0,  0.997009, -0.042848, -0.064150,
  0.717899, -0.146140, -0.280876,  0.0,  0.0,  0.937651, -0.033265, -0.345927,
  0.697504, -0.419412,  0.279608,  0.0,  0.0,  0.932707, -0.200110,  0.299997,
  0.717899, -0.421313,  0.097426,  0.0,  0.0,  0.968505, -0.243416,  0.052126,
  0.717899, -0.421313, -0.097426,  0.0,  0.0,  0.968505, -0.243416, -0.052126,
  0.697504, -0.419412, -0.279608,  0.0,  0.0,  0.932707, -0.200110, -0.299997,
  0.419412, -0.697504,  0.279608,  0.0,  0.0,  0.200110, -0.932707,  0.299997,
  0.421313, -0.717899,  0.097426,  0.0,  0.0,  0.243416, -0.968505,  0.052126,
  0.421313, -0.717899, -0.097426,  0.0,  0.0,  0.243416, -0.968505, -0.052126,
  0.419412, -0.697504, -0.279608,  0.0,  0.0,  0.200110, -0.932707, -0.299997,
  0.146140, -0.717899,  0.280876,  0.0,  0.0,  0.033265, -0.937651,  0.345927,
  0.146356, -0.741614,  0.097571,  0.0,  0.0,  0.042848, -0.997009,  0.064150,
  0.146356, -0.741614, -0.097571,  0.0,  0.0,  0.042848, -0.997009, -0.064150,
  0.146140, -0.717899, -0.280876,  0.0,  0.0,  0.033265, -0.937651, -0.345927,
 -0.146140, -0.717899,  0.280876,  0.0,  0.0, -0.033265, -0.937651,  0.345927,
 -0.146356, -0.741614,  0.097571,  0.0,  0.0, -0.042848, -0.997009,  0.064150,
 -0.146356, -0.741614, -0.097571,  0.0,  0.0, -0.042848, -0.997009, -0.064150,
 -0.146140, -0.717899, -0.280876,  0.0,  0.0, -0.033265, -0.937651, -0.345927,
 -0.419412, -0.697504,  0.279608,  0.0,  0.0, -0.200110, -0.932707,  0.299997,
 -0.421313, -0.717899,  0.097426,  0.0,  0.0, -0.243416, -0.968505,  0.052126,
 -0.421313, -0.717899, -0.097426,  0.0,  0.0, -0.243416, -0.968505, -0.052126,
 -0.419412, -0.697504, -0.279608,  0.0,  0.0, -0.200110, -0.932707, -0.299997,
 -0.419412, -0.419412, -0.465002,  0.0,  0.0, -0.144566, -0.144566, -0.978851,
 -0.146140, -0.421313, -0.478599,  0.0,  0.0, -0.022248, -0.170202, -0.985137,
  0.146140, -0.421313, -0.478599,  0.0,  0.0,  0.022248, -0.170202, -0.985137,
  0.419412, -0.419412, -0.465002,  0.0,  0.0,  0.144566, -0.144566, -0.978851,
 -0.421313, -0.146140, -0.478599,  0.0,  0.0, -0.170202, -0.022248, -0.985137,
 -0.146356, -0.146356, -0.494409,  0.0,  0.0, -0.027772, -0.027772, -0.999207,
  0.146356, -0.146356, -0.494409,  0.0,  0.0,  0.027772, -0.027772, -0.999207,
  0.421313, -0.146140, -0.478599,  0.0,  0.0,  0.170202, -0.022248, -0.985137,
 -0.421313,  0.146140, -0.478599,  0.0,  0.0, -0.170202,  0.022248, -0.985137,
 -0.146356,  0.146356, -0.494409,  0.0,  0.0, -0.027772,  0.027772, -0.999207,
  0.146356,  0.146356, -0.494409,  0.0,  0.0,  0.027772,  0.027772, -0.999207,
  0.421313,  0.146140, -0.478599,  0.0,  0.0,  0.170202,  0.022248, -0.985137,
 -0.419412,  0.419412, -0.465002,  0.0,  0.0, -0.144566,  0.144566, -0.978851,
 -0.146140,  0.421313, -0.478599,  0.0,  0.0, -0.022248,  0.170202, -0.985137,
  0.146140,  0.421313, -0.478599,  0.0,  0.0,  0.022248,  0.170202, -0.985137,
  0.419412,  0.419412, -0.465002,  0.0,  0.0,  0.144566,  0.144566, -0.978851,
  0.419412, -0.419412,  0.465002,  0.0,  0.0,  0.144566, -0.144566,  0.978851,
  0.146140, -0.421313,  0.478599,  0.0,  0.0,  0.022248, -0.170202,  0.985137,
 -0.146140, -0.421313,  0.478599,  0.0,  0.0, -0.022248, -0.170202,  0.985137,
 -0.419412, -0.419412,  0.465002,  0.0,  0.0, -0.144566, -0.144566,  0.978851,
  0.421313, -0.146140,  0.478599,  0.0,  0.0,  0.170202, -0.022248,  0.985137,
  0.146356, -0.146356,  0.494409,  0.0,  0.0,  0.027772, -0.027772,  0.999207,
 -0.146356, -0.146356,  0.494409,  0.0,  0.0, -0.027772, -0.027772,  0.999207,
 -0.421313, -0.146140,  0.478599,  0.0,  0.0, -0.170202, -0.022248,  0.985137,
  0.421313,  0.146140,  0.478599,  0.0,  0.0,  0.170202,  0.022248,  0.985137,
  0.146356,  0.146356,  0.494409,  0.0,  0.0,  0.027772,  0.027772,  0.999207,
 -0.146356,  0.146356,  0.494409,  0.0,  0.0, -0.027772,  0.027772,  0.999207,
 -0.421313,  0.146140,  0.478599,  0.0,  0.0, -0.170202,  0.022248,  0.985137,
  0.419412,  0.419412,  0.465002,  0.0,  0.0,  0.144566,  0.144566,  0.978851,
  0.146140,  0.421313,  0.478599,  0.0,  0.0,  0.022248,  0.170202,  0.985137,
 -0.146140,  0.421313,  0.478599,  0.0,  0.0, -0.022248,  0.170202,  0.985137,
 -0.419412,  0.419412,  0.465002,  0.0,  0.0, -0.144566,  0.144566,  0.978851];

RES.cBlock.s_aiIndexData =
[71, 15, 1, 87, 31, 2, 103, 43, 3, 20, 0, 119, 135, 32, 2, 151, 24, 5, 59, 0, 20, 59, 63, 19, 63, 67, 17, 67, 71, 16, 4, 8, 56, 23, 56, 57, 22, 57, 58, 21, 58, 20, 8, 9, 60, 56, 60, 57, 57, 61, 62, 58, 62, 63, 9, 10, 64, 60, 64, 65, 61, 65, 66, 62, 66, 67, 10, 11, 64, 64, 68, 69, 65, 69, 70, 66, 70, 67, 11, 5, 68, 68, 12, 69, 69, 13, 14, 70, 14, 15, 15, 75, 1, 75, 79, 35, 79, 83, 33, 83, 87, 32, 5, 24, 72, 12, 72, 73, 13, 73, 74, 14, 74, 15, 24, 25, 76, 72, 76, 73, 73, 77, 78, 74, 78, 79, 25, 26, 80, 76, 80, 81, 77, 81, 82, 78, 82, 79, 26, 27, 80, 80, 84, 85, 81, 85, 86, 82, 86, 83, 27, 6, 84, 84, 28, 85, 85, 29, 30, 86, 30, 31, 31, 91, 2, 91, 95, 47, 95, 99, 46, 99, 103, 44, 6, 36, 88, 28, 88, 89, 29, 89, 90, 30, 90, 31, 36, 37, 92, 88, 92, 89, 89, 93, 94, 90, 94, 95, 37, 38, 96, 92, 96, 97, 93, 97, 98, 94, 98, 95, 38, 39, 96, 96, 100, 101, 97, 101, 102, 98, 102, 99, 39, 7, 100, 100, 40, 101, 101, 41, 42, 102, 42, 43, 43, 107, 3, 107, 111, 55, 111, 115, 53, 115, 119, 52, 7, 48, 104, 40, 104, 105, 41, 105, 106, 42, 106, 43, 48, 49, 108, 104, 108, 105, 105, 109, 110, 106, 110, 111, 49, 50, 112, 108, 112, 113, 109, 113, 114, 110, 114, 115, 50, 51, 112, 112, 116, 117, 113, 117, 118, 114, 118, 115, 51, 4, 116, 116, 23, 117, 117, 22, 21, 118, 21, 20, 55, 123, 3, 123, 127, 44, 127, 131, 45, 131, 135, 47, 0, 19, 120, 52, 120, 121, 53, 121, 122, 54, 122, 55, 19, 18, 124, 120, 124, 125, 121, 125, 126, 122, 126, 123, 18, 17, 128, 124, 128, 125, 125, 129, 130, 126, 130, 131, 17, 16, 128, 128, 132, 129, 129, 133, 134, 130, 134, 135, 16, 1, 132, 132, 35, 133, 133, 34, 134, 134, 33, 32, 51, 139, 4, 139, 143, 8, 143, 147, 9, 147, 151, 11, 7, 39, 136, 48, 136, 137, 49, 137, 138, 50, 138, 51, 39, 38, 140, 136, 140, 141, 137, 141, 142, 138, 142, 139, 38, 37, 144, 140, 144, 141, 141, 145, 146, 142, 146, 147, 37, 36, 144, 144, 148, 145, 145, 149, 150, 146, 150, 151, 36, 6, 148, 148, 27, 149, 149, 26, 25, 150, 25, 24, 16, 71, 1, 32, 87, 2, 44, 103, 3, 119, 0, 52, 47, 135, 2, 11, 151, 5, 19, 0, 59, 63, 18, 19, 18, 63, 17, 17, 67, 16, 23, 4, 56, 22, 23, 57, 21, 22, 58, 58, 59, 20, 56, 8, 60, 60, 61, 57, 58, 57, 62, 59, 58, 63, 60, 9, 64, 61, 60, 65, 62, 61, 66, 63, 62, 67, 11, 68, 64, 65, 64, 69, 66, 65, 70, 70, 71, 67, 5, 12, 68, 12, 13, 69, 70, 69, 14, 71, 70, 15, 75, 35, 1, 79, 34, 35, 34, 79, 33, 33, 83, 32, 12, 5, 72, 13, 12, 73, 14, 13, 74, 74, 75, 15, 72, 24, 76, 76, 77, 73, 74, 73, 78, 75, 74, 79, 76, 25, 80, 77, 76, 81, 78, 77, 82, 98, 99, 95, 27, 84, 80, 81, 80, 85, 82, 81, 86, 86, 87, 83, 6, 28, 84, 28, 29, 85, 86, 85, 30, 87, 86, 31, 91, 47, 2, 95, 46, 47, 45, 99, 44, 28, 6, 88, 29, 28, 89, 30, 29, 90, 90, 91, 31, 88, 36, 92, 92, 93, 89, 90, 89, 94, 91, 90, 95, 92, 37, 96, 93, 92, 97, 94, 93, 98, 131, 46, 45, 39, 100, 96, 97, 96, 101, 98, 97, 102, 102, 103, 99, 7, 40, 100, 40, 41, 101, 102, 101, 42, 103, 102, 43, 107, 55, 3, 111, 54, 55, 54, 111, 53, 53, 115, 52, 40, 7, 104, 41, 40, 105, 42, 41, 106, 106, 107, 43, 104, 48, 108, 108, 109, 105, 106, 105, 110, 107, 106, 111, 108, 49, 112, 109, 108, 113, 110, 109, 114, 111, 110, 115, 51, 116, 112, 113, 112, 117, 114, 113, 118, 118, 119, 115, 4, 23, 116, 23, 22, 117, 118, 117, 21, 119, 118, 20, 123, 44, 3, 127, 45, 44, 34, 33, 134, 46, 131, 47, 52, 0, 120, 53, 52, 121, 54, 53, 122, 122, 123, 55, 120, 19, 124, 121, 120, 125, 122, 121, 126, 126, 127, 123, 124, 18, 128, 82, 83, 79, 126, 125, 130, 127, 126, 131, 16, 132, 128, 132, 133, 129, 130, 129, 134, 131, 130, 135, 1, 35, 132, 35, 34, 133, 99, 45, 46, 135, 134, 32, 139, 8, 4, 143, 9, 8, 144, 145, 141, 10, 147, 11, 48, 7, 136, 49, 48, 137, 50, 49, 138, 138, 139, 51, 136, 39, 140, 137, 136, 141, 138, 137, 142, 142, 143, 139, 140, 38, 144, 128, 129, 125, 142, 141, 146, 143, 142, 147, 36, 148, 144, 148, 149, 145, 146, 145, 150, 147, 146, 151, 6, 27, 148, 27, 26, 149, 150, 149, 25, 151, 150, 24, 147, 10, 9];

RES.cBlock.s_afVertexDataLow =
[-0.65, -0.65, -0.5,  0.0,  0.0, -0.57735, -0.57735, -0.57735,
 -0.65,  0.65, -0.5,  0.0,  0.0, -0.57735,  0.57735, -0.57735,
  0.65, -0.65, -0.5,  0.0,  0.0,  0.57735, -0.57735, -0.57735,
  0.65,  0.65, -0.5,  0.0,  0.0,  0.57735,  0.57735, -0.57735,
 -0.65, -0.65,  0.5,  0.0,  0.0, -0.57735, -0.57735,  0.57735,
 -0.65,  0.65,  0.5,  0.0,  0.0, -0.57735,  0.57735,  0.57735,
  0.65, -0.65,  0.5,  0.0,  0.0,  0.57735, -0.57735,  0.57735,
  0.65,  0.65,  0.5,  0.0,  0.0,  0.57735,  0.57735,  0.57735,
  0.00,  0.00,  0.5,  0.0,  0.0,  0.00000,  0.00000,  1.25000];   // for typed blocks

RES.cBlock.s_aiIndexDataLow =
[4, 6, 8, 6, 7, 8, 7, 5, 8, 5, 4, 8, 1, 0, 5, 5, 0, 4, 0, 2, 4, 4, 2, 6, 2, 3, 6, 6, 3, 7, 3, 1, 7, 7, 1, 5, 1, 3, 0, 0, 3, 2];

RES.cBlock.s_sVertexShader =
"attribute vec3 a_v3Position;"                                        +
"attribute vec3 a_v3Normal;"                                          +
"uniform   mat4 u_m4ModelViewProj;"                                   +
"uniform   mat4 u_m4ModelView;"                                       +
"uniform   mat3 u_m3Normal;"                                          +
"varying   vec3 v_v3Relative;"                                        +
"varying   vec3 v_v3Normal;"                                          +
"varying   vec3 v_v3NormalTrue;"                                      +
""                                                                    +
"void main()"                                                         +
"{"                                                                   +
"    v_v3Relative   = (u_m4ModelView * vec4(a_v3Position, 1.0)).xyz;" +
"    v_v3Normal     = u_m3Normal * a_v3Normal;"                       +
"    v_v3NormalTrue = a_v3Normal;"                                    +
""                                                                    +
"    gl_Position = u_m4ModelViewProj * vec4(a_v3Position, 1.0);"      +
"}";

RES.cBlock.s_sFragmentShader =
"precision mediump float;"                                                                                       +
"precision lowp    int;"                                                                                         +
""                                                                                                               +
"uniform vec4 u_v4Color;"                                                                                        +
"uniform int  u_iType;"                                                                                          +
"varying vec3 v_v3Relative;"                                                                                     +
"varying vec3 v_v3Normal;"                                                                                       +
"varying vec3 v_v3NormalTrue;"                                                                                   +
""                                                                                                               +
"void main()"                                                                                                    +
"{"                                                                                                              +
"    const vec3 v3Camera = vec3(0.0, 0.447213650, -0.894427299);"                                                +
"    const vec3 v3Light  = vec3(0.0,         0.0,          1.0);"                                                +
""                                                                                                               +
"    float fIntensity = 60.0 * inversesqrt(dot(v_v3Relative, v_v3Relative));"                                    +
"    fIntensity      *= dot(normalize(v_v3Relative), v3Camera);"                                                 +
""                                                                                                               +
"    fIntensity  = min(fIntensity, 1.5);"                                                                        +
"    fIntensity *= dot(normalize(v_v3Normal), v3Light)*0.5+0.5;"                                                 +
""                                                                                                               +
"    if(u_iType != 0)"                                                                                           + // still faster than a texture
"    {"                                                                                                          +
"        vec3 v3Norm = normalize(v_v3NormalTrue);"                                                               +
"        if(u_iType == 1) {fIntensity *= 1.0 - 0.8*smoothstep(0.9925, 0.9965, v3Norm.z);}"                       +
"                    else {fIntensity *= 1.0 - 0.8*smoothstep(0.92,   0.954,  v3Norm.z * (1.0-abs(v3Norm.y)));}" +
"    }"                                                                                                          +
""                                                                                                               +
"    gl_FragColor = vec4(u_v4Color.rgb*fIntensity, u_v4Color.a);"                                                +
"}";


// ****************************************************************
RES.cPaddle = {};
RES.cPaddle.s_afVertexData =
[-2.948144, -0.450411, -0.818929,  0.0,  0.0, -0.167913, -0.794031, -0.584185,
 -2.948144,  0.450411, -0.818929,  0.0,  0.0, -0.167913,  0.794031, -0.584185,
  2.948144,  0.450411, -0.818929,  0.0,  0.0,  0.167913,  0.794031, -0.584185,
  2.948145, -0.450411, -0.818929,  0.0,  0.0,  0.167913, -0.794031, -0.584185,
 -2.948145, -0.450411,  0.818929,  0.0,  0.0, -0.167913, -0.794031,  0.584185,
 -2.948144,  0.450411,  0.818929,  0.0,  0.0, -0.167913,  0.794031,  0.584185,
  2.948144,  0.450411,  0.818929,  0.0,  0.0,  0.167913,  0.794031,  0.584185,
  2.948144, -0.450411,  0.818929,  0.0,  0.0,  0.167913, -0.794031,  0.584185,
 -3.069385, -0.344682,  0.852607,  0.0,  0.0, -0.335154, -0.377300,  0.863277,
 -3.105225, -0.180346,  0.862562,  0.0,  0.0, -0.340861, -0.075320,  0.937071,
 -3.110254,  0.000000,  0.863959,  0.0,  0.0, -0.333964,  0.000000,  0.942564,
 -3.105225,  0.180346,  0.862562,  0.0,  0.0, -0.340861,  0.075320,  0.937071,
 -3.069385,  0.344683,  0.852607,  0.0,  0.0, -0.335154,  0.377300,  0.863277,
 -3.069385,  0.468934,  0.626695,  0.0,  0.0, -0.220191,  0.964293,  0.146947,
 -3.105224,  0.474409,  0.327901,  0.0,  0.0, -0.200659,  0.979339,  0.024537,
 -3.110253,  0.475178, -0.000000,  0.0,  0.0, -0.196844,  0.980407,  0.000000,
 -3.105224,  0.474409, -0.327901,  0.0,  0.0, -0.200659,  0.979339, -0.024537,
 -3.069385,  0.468934, -0.626695,  0.0,  0.0, -0.220191,  0.964293, -0.146947,
 -3.069385,  0.344682, -0.852607,  0.0,  0.0, -0.335154,  0.377300, -0.863277,
 -3.105224,  0.180346, -0.862562,  0.0,  0.0, -0.340861,  0.075320, -0.937071,
 -3.110253, -0.000000, -0.863959,  0.0,  0.0, -0.333964,  0.000000, -0.942564,
 -3.105224, -0.180346, -0.862562,  0.0,  0.0, -0.340861, -0.075320, -0.937071,
 -3.069385, -0.344682, -0.852607,  0.0,  0.0, -0.335154, -0.377300, -0.863277,
 -3.069385, -0.468934, -0.626695,  0.0,  0.0, -0.220191, -0.964293, -0.146947,
 -3.105225, -0.474409, -0.327901,  0.0,  0.0, -0.200659, -0.979339, -0.024537,
 -3.110254, -0.475178, -0.000000,  0.0,  0.0, -0.196844, -0.980407,  0.000000,
 -3.105225, -0.474409,  0.327901,  0.0,  0.0, -0.200659, -0.979339,  0.024537,
 -3.069385, -0.468934,  0.626695,  0.0,  0.0, -0.220191, -0.964293,  0.146947,
 -2.256103,  0.468934,  0.852607,  0.0,  0.0, -0.030488,  0.837062,  0.546190,
 -1.180444,  0.474409,  0.862562,  0.0,  0.0, -0.005493,  0.844691,  0.535173,
  0.000000,  0.475178,  0.863959,  0.0,  0.0,  0.000000,  0.845698,  0.533616,
  1.180444,  0.474409,  0.862562,  0.0,  0.0,  0.005493,  0.844691,  0.535173,
  2.256104,  0.468934,  0.852607,  0.0,  0.0,  0.030488,  0.837062,  0.546190,
  3.069385,  0.468934,  0.626695,  0.0,  0.0,  0.220191,  0.964293,  0.146947,
  3.105225,  0.474409,  0.327901,  0.0,  0.0,  0.200659,  0.979339,  0.024537,
  3.110254,  0.475178, -0.000000,  0.0,  0.0,  0.196844,  0.980407,  0.000000,
  3.105225,  0.474409, -0.327901,  0.0,  0.0,  0.200659,  0.979339, -0.024537,
  3.069385,  0.468934, -0.626695,  0.0,  0.0,  0.220191,  0.964293, -0.146947,
  2.256103,  0.468934, -0.852607,  0.0,  0.0,  0.030488,  0.837062, -0.546190,
  1.180444,  0.474409, -0.862562,  0.0,  0.0,  0.005493,  0.844691, -0.535173,
 -0.000000,  0.475178, -0.863959,  0.0,  0.0,  0.000000,  0.845698, -0.533616,
 -1.180444,  0.474409, -0.862562,  0.0,  0.0, -0.005493,  0.844691, -0.535173,
 -2.256103,  0.468934, -0.852607,  0.0,  0.0, -0.030488,  0.837062, -0.546190,
  3.069385,  0.344682,  0.852607,  0.0,  0.0,  0.335154,  0.377300,  0.863277,
  3.105224,  0.180346,  0.862562,  0.0,  0.0,  0.340861,  0.075320,  0.937071,
  3.110253, -0.000000,  0.863959,  0.0,  0.0,  0.333964,  0.000000,  0.942564,
  3.105224, -0.180346,  0.862562,  0.0,  0.0,  0.340861, -0.075320,  0.937071,
  3.069385, -0.344683,  0.852607,  0.0,  0.0,  0.335154, -0.377300,  0.863277,
  3.069385, -0.468934,  0.626695,  0.0,  0.0,  0.220191, -0.964293,  0.146947,
  3.105224, -0.474409,  0.327901,  0.0,  0.0,  0.200659, -0.979339,  0.024537,
  3.110253, -0.475178, -0.000000,  0.0,  0.0,  0.196844, -0.980407,  0.000000,
  3.105224, -0.474409, -0.327901,  0.0,  0.0,  0.200659, -0.979339, -0.024537,
  3.069385, -0.468934, -0.626695,  0.0,  0.0,  0.220191, -0.964293, -0.146947,
  3.069385, -0.344682, -0.852607,  0.0,  0.0,  0.335154, -0.377300, -0.863277,
  3.105225, -0.180346, -0.862562,  0.0,  0.0,  0.340861, -0.075320, -0.937071,
  3.110254,  0.000000, -0.863959,  0.0,  0.0,  0.333964,  0.000000, -0.942564,
  3.105225,  0.180346, -0.862562,  0.0,  0.0,  0.340861,  0.075320, -0.937071,
  3.069385,  0.344682, -0.852607,  0.0,  0.0,  0.335154,  0.377300, -0.863277,
  2.256103, -0.468934,  0.852607,  0.0,  0.0,  0.030488, -0.837062,  0.546190,
  1.180444, -0.474409,  0.862562,  0.0,  0.0,  0.005493, -0.844691,  0.535173,
 -0.000000, -0.475178,  0.863959,  0.0,  0.0,  0.000000, -0.845698,  0.533616,
 -1.180444, -0.474409,  0.862562,  0.0,  0.0, -0.005493, -0.844691,  0.535173,
 -2.256104, -0.468934,  0.852607,  0.0,  0.0, -0.030488, -0.837062,  0.546190,
 -2.256103, -0.468934, -0.852607,  0.0,  0.0, -0.030488, -0.837062, -0.546190,
 -1.180444, -0.474409, -0.862562,  0.0,  0.0, -0.005493, -0.844691, -0.535173,
  0.000000, -0.475178, -0.863959,  0.0,  0.0,  0.000000, -0.845698, -0.533616,
  1.180444, -0.474409, -0.862562,  0.0,  0.0,  0.005493, -0.844691, -0.535173,
  2.256103, -0.468934, -0.852607,  0.0,  0.0,  0.030488, -0.837062, -0.546190,
 -3.390088, -0.347969,  0.632670,  0.0,  0.0, -0.605426, -0.653920,  0.453658,
 -3.472668, -0.349138,  0.328715,  0.0,  0.0, -0.649556, -0.753990,  0.097629,
 -3.484179, -0.349285, -0.000000,  0.0,  0.0, -0.638783, -0.769372,  0.000000,
 -3.472668, -0.349138, -0.328715,  0.0,  0.0, -0.649556, -0.753990, -0.097629,
 -3.390088, -0.347969, -0.632670,  0.0,  0.0, -0.605426, -0.653920, -0.453658,
 -3.472669, -0.180793,  0.634796,  0.0,  0.0, -0.787439, -0.207801,  0.580248,
 -3.568726, -0.180933,  0.328969,  0.0,  0.0, -0.947050, -0.279580,  0.157750,
 -3.581946, -0.180944, -0.000000,  0.0,  0.0, -0.955870, -0.293741,  0.000000,
 -3.568725, -0.180933, -0.328969,  0.0,  0.0, -0.947050, -0.279580, -0.157750,
 -3.472668, -0.180793, -0.634796,  0.0,  0.0, -0.787439, -0.207801, -0.580248,
 -3.484179,  0.000000,  0.635064,  0.0,  0.0, -0.794000,  0.000000,  0.607868,
 -3.581946,  0.000000,  0.328990,  0.0,  0.0, -0.984954,  0.000000,  0.172796,
 -3.595312,  0.000000, -0.000000,  0.0,  0.0, -1.000000,  0.000000,  0.000000,
 -3.581946,  0.000000, -0.328990,  0.0,  0.0, -0.984954,  0.000000, -0.172796,
 -3.484179, -0.000000, -0.635064,  0.0,  0.0, -0.794000,  0.000000, -0.607868,
 -3.472668,  0.180793,  0.634796,  0.0,  0.0, -0.787439,  0.207801,  0.580248,
 -3.568725,  0.180933,  0.328969,  0.0,  0.0, -0.947050,  0.279580,  0.157750,
 -3.581946,  0.180944, -0.000000,  0.0,  0.0, -0.955870,  0.293741,  0.000000,
 -3.568725,  0.180933, -0.328969,  0.0,  0.0, -0.947050,  0.279580, -0.157750,
 -3.472668,  0.180793, -0.634796,  0.0,  0.0, -0.787439,  0.207801, -0.580248,
 -3.390088,  0.347969,  0.632670,  0.0,  0.0, -0.605426,  0.653920,  0.453658,
 -3.472668,  0.349138,  0.328715,  0.0,  0.0, -0.649556,  0.753990,  0.097629,
 -3.484179,  0.349285, -0.000000,  0.0,  0.0, -0.638783,  0.769372,  0.000000,
 -3.472668,  0.349138, -0.328715,  0.0,  0.0, -0.649556,  0.753990, -0.097629,
 -3.390088,  0.347969, -0.632670,  0.0,  0.0, -0.605426,  0.653920, -0.453658,
 -2.277612,  0.517930,  0.632670,  0.0,  0.0, -0.032289,  0.991241,  0.127934,
 -2.285266,  0.530547,  0.328715,  0.0,  0.0, -0.039766,  0.998932,  0.022950,
 -2.286230,  0.532305, -0.000000,  0.0,  0.0, -0.040986,  0.999146,  0.000000,
 -2.285266,  0.530547, -0.328715,  0.0,  0.0, -0.039766,  0.998932, -0.022950,
 -2.277612,  0.517930, -0.632670,  0.0,  0.0, -0.032289,  0.991241, -0.127934,
 -1.183374,  0.530547,  0.634796,  0.0,  0.0, -0.005615,  0.989593,  0.143620,
 -1.184289,  0.545222,  0.328969,  0.0,  0.0, -0.007141,  0.999603,  0.026765,
 -1.184363,  0.547242, -0.000000,  0.0,  0.0, -0.007630,  0.999969,  0.000000,
 -1.184289,  0.545222, -0.328969,  0.0,  0.0, -0.007141,  0.999603, -0.026765,
 -1.183374,  0.530547, -0.634796,  0.0,  0.0, -0.005615,  0.989593, -0.143620,
  0.000000,  0.532305,  0.635064,  0.0,  0.0,  0.000000,  0.989288,  0.145878,
  0.000000,  0.547242,  0.328990,  0.0,  0.0,  0.000000,  0.999603,  0.027467,
  0.000000,  0.549284, -0.000000,  0.0,  0.0,  0.000000,  0.999969,  0.000000,
 -0.000000,  0.547242, -0.328990,  0.0,  0.0,  0.000000,  0.999603, -0.027467,
 -0.000000,  0.532305, -0.635064,  0.0,  0.0,  0.000000,  0.989288, -0.145878,
  1.183374,  0.530547,  0.634796,  0.0,  0.0,  0.005615,  0.989593,  0.143620,
  1.184290,  0.545222,  0.328969,  0.0,  0.0,  0.007141,  0.999603,  0.026765,
  1.184363,  0.547242, -0.000000,  0.0,  0.0,  0.007630,  0.999969,  0.000000,
  1.184289,  0.545222, -0.328969,  0.0,  0.0,  0.007141,  0.999603, -0.026765,
  1.183374,  0.530547, -0.634796,  0.0,  0.0,  0.005615,  0.989593, -0.143620,
  2.277612,  0.517930,  0.632670,  0.0,  0.0,  0.032289,  0.991241,  0.127934,
  2.285266,  0.530547,  0.328715,  0.0,  0.0,  0.039766,  0.998932,  0.022950,
  2.286231,  0.532305, -0.000000,  0.0,  0.0,  0.040986,  0.999146,  0.000000,
  2.285266,  0.530547, -0.328715,  0.0,  0.0,  0.039766,  0.998932, -0.022950,
  2.277612,  0.517930, -0.632670,  0.0,  0.0,  0.032289,  0.991241, -0.127934,
  3.390088,  0.347969,  0.632670,  0.0,  0.0,  0.605426,  0.653920,  0.453658,
  3.472668,  0.349138,  0.328715,  0.0,  0.0,  0.649556,  0.753990,  0.097629,
  3.484179,  0.349285, -0.000000,  0.0,  0.0,  0.638783,  0.769372,  0.000000,
  3.472668,  0.349138, -0.328715,  0.0,  0.0,  0.649556,  0.753990, -0.097629,
  3.390088,  0.347969, -0.632670,  0.0,  0.0,  0.605426,  0.653920, -0.453658,
  3.472668,  0.180793,  0.634796,  0.0,  0.0,  0.787439,  0.207801,  0.580248,
  3.568725,  0.180933,  0.328969,  0.0,  0.0,  0.947050,  0.279580,  0.157750,
  3.581946,  0.180944, -0.000000,  0.0,  0.0,  0.955870,  0.293741,  0.000000,
  3.568726,  0.180933, -0.328969,  0.0,  0.0,  0.947050,  0.279580, -0.157750,
  3.472669,  0.180793, -0.634796,  0.0,  0.0,  0.787439,  0.207801, -0.580248,
  3.484179, -0.000000,  0.635064,  0.0,  0.0,  0.794000,  0.000000,  0.607868,
  3.581946, -0.000000,  0.328990,  0.0,  0.0,  0.984954,  0.000000,  0.172796,
  3.595312, -0.000000, -0.000000,  0.0,  0.0,  1.000000,  0.000000,  0.000000,
  3.581946,  0.000000, -0.328990,  0.0,  0.0,  0.984954,  0.000000, -0.172796,
  3.484179,  0.000000, -0.635064,  0.0,  0.0,  0.794000,  0.000000, -0.607868,
  3.472668, -0.180793,  0.634796,  0.0,  0.0,  0.787439, -0.207801,  0.580248,
  3.568725, -0.180933,  0.328969,  0.0,  0.0,  0.947050, -0.279580,  0.157750,
  3.581946, -0.180944, -0.000000,  0.0,  0.0,  0.955870, -0.293741,  0.000000,
  3.568725, -0.180933, -0.328969,  0.0,  0.0,  0.947050, -0.279580, -0.157750,
  3.472668, -0.180793, -0.634796,  0.0,  0.0,  0.787439, -0.207801, -0.580248,
  3.390088, -0.347969,  0.632670,  0.0,  0.0,  0.605426, -0.653920,  0.453658,
  3.472668, -0.349138,  0.328715,  0.0,  0.0,  0.649556, -0.753990,  0.097629,
  3.484179, -0.349285, -0.000000,  0.0,  0.0,  0.638783, -0.769372,  0.000000,
  3.472668, -0.349138, -0.328715,  0.0,  0.0,  0.649556, -0.753990, -0.097629,
  3.390088, -0.347969, -0.632670,  0.0,  0.0,  0.605426, -0.653920, -0.453658,
  2.277612, -0.517930,  0.632670,  0.0,  0.0,  0.032289, -0.991241,  0.127934,
  2.285266, -0.530547,  0.328715,  0.0,  0.0,  0.039766, -0.998932,  0.022950,
  2.286230, -0.532305, -0.000000,  0.0,  0.0,  0.040986, -0.999146,  0.000000,
  2.285266, -0.530547, -0.328715,  0.0,  0.0,  0.039766, -0.998932, -0.022950,
  2.277612, -0.517930, -0.632670,  0.0,  0.0,  0.032289, -0.991241, -0.127934,
  1.183374, -0.530547,  0.634796,  0.0,  0.0,  0.005615, -0.989593,  0.143620,
  1.184289, -0.545222,  0.328969,  0.0,  0.0,  0.007141, -0.999603,  0.026765,
  1.184363, -0.547242, -0.000000,  0.0,  0.0,  0.007630, -0.999969,  0.000000,
  1.184289, -0.545222, -0.328969,  0.0,  0.0,  0.007141, -0.999603, -0.026765,
  1.183374, -0.530547, -0.634796,  0.0,  0.0,  0.005615, -0.989593, -0.143620,
 -0.000000, -0.532305,  0.635064,  0.0,  0.0,  0.000000, -0.989288,  0.145878,
 -0.000000, -0.547242,  0.328990,  0.0,  0.0,  0.000000, -0.999603,  0.027467,
 -0.000000, -0.549284, -0.000000,  0.0,  0.0,  0.000000, -0.999969,  0.000000,
  0.000000, -0.547242, -0.328990,  0.0,  0.0,  0.000000, -0.999603, -0.027467,
  0.000000, -0.532305, -0.635064,  0.0,  0.0,  0.000000, -0.989288, -0.145878,
 -1.183374, -0.530547,  0.634796,  0.0,  0.0, -0.005615, -0.989593,  0.143620,
 -1.184290, -0.545222,  0.328969,  0.0,  0.0, -0.007141, -0.999603,  0.026765,
 -1.184363, -0.547242, -0.000000,  0.0,  0.0, -0.007630, -0.999969,  0.000000,
 -1.184289, -0.545222, -0.328969,  0.0,  0.0, -0.007141, -0.999603, -0.026765,
 -1.183374, -0.530547, -0.634796,  0.0,  0.0, -0.005615, -0.989593, -0.143620,
 -2.277612, -0.517930,  0.632670,  0.0,  0.0, -0.032289, -0.991241,  0.127934,
 -2.285266, -0.530547,  0.328715,  0.0,  0.0, -0.039766, -0.998932,  0.022950,
 -2.286231, -0.532305, -0.000000,  0.0,  0.0, -0.040986, -0.999146,  0.000000,
 -2.285266, -0.530547, -0.328715,  0.0,  0.0, -0.039766, -0.998932, -0.022950,
 -2.277612, -0.517930, -0.632670,  0.0,  0.0, -0.032289, -0.991241, -0.127934,
 -2.277612, -0.347969, -0.941691,  0.0,  0.0, -0.055086, -0.372356, -0.926420,
 -1.183374, -0.349138, -0.964630,  0.0,  0.0, -0.009491, -0.406842, -0.913419,
  0.000000, -0.349285, -0.967828,  0.0,  0.0,  0.000000, -0.411695, -0.911283,
  1.183374, -0.349138, -0.964630,  0.0,  0.0,  0.009491, -0.406842, -0.913419,
  2.277612, -0.347969, -0.941691,  0.0,  0.0,  0.055086, -0.372356, -0.926420,
 -2.285266, -0.180793, -0.964630,  0.0,  0.0, -0.071780, -0.076601, -0.994446,
 -1.184289, -0.180933, -0.991313,  0.0,  0.0, -0.012909, -0.088168, -0.996002,
  0.000000, -0.180944, -0.994985,  0.0,  0.0,  0.000000, -0.090060, -0.995911,
  1.184290, -0.180933, -0.991313,  0.0,  0.0,  0.012909, -0.088168, -0.996002,
  2.285266, -0.180793, -0.964630,  0.0,  0.0,  0.071780, -0.076601, -0.994446,
 -2.286230, -0.000000, -0.967828,  0.0,  0.0, -0.074221,  0.000000, -0.997223,
 -1.184363, -0.000000, -0.994985,  0.0,  0.0, -0.013855,  0.000000, -0.999878,
  0.000000, -0.000000, -0.998698,  0.0,  0.0,  0.000000,  0.000000, -1.000000,
  1.184363,  0.000000, -0.994985,  0.0,  0.0,  0.013855,  0.000000, -0.999878,
  2.286230,  0.000000, -0.967828,  0.0,  0.0,  0.074221,  0.000000, -0.997223,
 -2.285266,  0.180793, -0.964630,  0.0,  0.0, -0.071780,  0.076601, -0.994446,
 -1.184289,  0.180933, -0.991313,  0.0,  0.0, -0.012909,  0.088168, -0.996002,
  0.000000,  0.180944, -0.994985,  0.0,  0.0,  0.000000,  0.090060, -0.995911,
  1.184290,  0.180933, -0.991313,  0.0,  0.0,  0.012909,  0.088168, -0.996002,
  2.285266,  0.180793, -0.964630,  0.0,  0.0,  0.071780,  0.076601, -0.994446,
 -2.277612,  0.347969, -0.941691,  0.0,  0.0, -0.055086,  0.372356, -0.926420,
 -1.183374,  0.349138, -0.964630,  0.0,  0.0, -0.009491,  0.406842, -0.913419,
  0.000000,  0.349285, -0.967828,  0.0,  0.0,  0.000000,  0.411695, -0.911283,
  1.183374,  0.349138, -0.964630,  0.0,  0.0,  0.009491,  0.406842, -0.913419,
  2.277612,  0.347969, -0.941691,  0.0,  0.0,  0.055086,  0.372356, -0.926420,
  2.277612, -0.347969,  0.941691,  0.0,  0.0,  0.055086, -0.372356,  0.926420,
  1.183374, -0.349138,  0.964630,  0.0,  0.0,  0.009491, -0.406842,  0.913419,
 -0.000000, -0.349285,  0.967828,  0.0,  0.0,  0.000000, -0.411695,  0.911283,
 -1.183374, -0.349138,  0.964630,  0.0,  0.0, -0.009491, -0.406842,  0.913419,
 -2.277612, -0.347969,  0.941691,  0.0,  0.0, -0.055086, -0.372356,  0.926420,
  2.285266, -0.180793,  0.964630,  0.0,  0.0,  0.071780, -0.076601,  0.994446,
  1.184289, -0.180933,  0.991313,  0.0,  0.0,  0.012909, -0.088168,  0.996002,
 -0.000000, -0.180944,  0.994985,  0.0,  0.0,  0.000000, -0.090060,  0.995911,
 -1.184290, -0.180933,  0.991313,  0.0,  0.0, -0.012909, -0.088168,  0.996002,
 -2.285266, -0.180793,  0.964630,  0.0,  0.0, -0.071780, -0.076601,  0.994446,
  2.286230, -0.000000,  0.967828,  0.0,  0.0,  0.074221,  0.000000,  0.997223,
  1.184363, -0.000000,  0.994985,  0.0,  0.0,  0.013855,  0.000000,  0.999878,
 -0.000000, -0.000000,  0.998698,  0.0,  0.0,  0.000000,  0.000000,  1.000000,
 -1.184363,  0.000000,  0.994985,  0.0,  0.0, -0.013855,  0.000000,  0.999878,
 -2.286230,  0.000000,  0.967828,  0.0,  0.0, -0.074221,  0.000000,  0.997223,
  2.285266,  0.180793,  0.964630,  0.0,  0.0,  0.071780,  0.076601,  0.994446,
  1.184289,  0.180933,  0.991313,  0.0,  0.0,  0.012909,  0.088168,  0.996002,
 -0.000000,  0.180944,  0.994985,  0.0,  0.0,  0.000000,  0.090060,  0.995911,
 -1.184290,  0.180933,  0.991313,  0.0,  0.0, -0.012909,  0.088168,  0.996002,
 -2.285266,  0.180793,  0.964630,  0.0,  0.0, -0.071780,  0.076601,  0.994446,
  2.277612,  0.347969,  0.941691,  0.0,  0.0,  0.055086,  0.372356,  0.926420,
  1.183374,  0.349138,  0.964630,  0.0,  0.0,  0.009491,  0.406842,  0.913419,
 -0.000000,  0.349285,  0.967828,  0.0,  0.0,  0.000000,  0.411695,  0.911283,
 -1.183374,  0.349138,  0.964630,  0.0,  0.0, -0.009491,  0.406842,  0.913419,
 -2.277612,  0.347969,  0.941691,  0.0,  0.0, -0.055086,  0.372356,  0.926420];

RES.cPaddle.s_aiIndexData =
[92, 17, 1, 117, 37, 2, 142, 52, 3, 23, 0, 167, 192, 38, 2, 217, 28, 5, 72, 0, 23, 72, 77, 22, 77, 82, 21, 82, 87, 19, 87, 92, 18, 4, 8, 68, 27, 68, 69, 26, 69, 70, 25, 70, 24, 24, 71, 23, 8, 9, 73, 68, 73, 74, 69, 74, 70, 70, 75, 76, 71, 76, 72, 9, 10, 78, 73, 78, 74, 74, 79, 75, 75, 80, 81, 76, 81, 82, 10, 11, 78, 78, 83, 84, 79, 84, 85, 80, 85, 81, 81, 86, 82, 11, 12, 83, 83, 88, 84, 84, 89, 90, 85, 90, 86, 86, 91, 92, 12, 5, 88, 88, 13, 89, 89, 14, 90, 90, 15, 16, 91, 16, 17, 17, 97, 1, 97, 102, 42, 102, 107, 41, 107, 112, 39, 112, 117, 38, 5, 28, 93, 13, 93, 94, 14, 94, 95, 15, 95, 16, 16, 96, 17, 28, 29, 98, 93, 98, 99, 94, 99, 95, 95, 100, 101, 96, 101, 97, 29, 30, 103, 98, 103, 99, 99, 104, 100, 100, 105, 106, 101, 106, 107, 30, 31, 103, 103, 108, 109, 104, 109, 110, 105, 110, 106, 106, 111, 107, 31, 32, 108, 108, 113, 109, 109, 114, 115, 110, 115, 111, 111, 116, 117, 32, 6, 113, 113, 33, 114, 114, 34, 115, 115, 35, 36, 116, 36, 37, 37, 122, 2, 122, 127, 57, 127, 132, 56, 132, 137, 54, 137, 142, 53, 6, 43, 118, 33, 118, 119, 34, 119, 120, 35, 120, 36, 36, 121, 37, 43, 44, 123, 118, 123, 124, 119, 124, 120, 120, 125, 126, 121, 126, 122, 44, 45, 128, 123, 128, 124, 124, 129, 125, 125, 130, 131, 126, 131, 132, 45, 46, 128, 128, 133, 134, 129, 134, 135, 130, 135, 131, 131, 136, 132, 46, 47, 133, 133, 138, 134, 134, 139, 140, 135, 140, 136, 136, 141, 142, 47, 7, 138, 138, 48, 139, 139, 49, 140, 140, 50, 51, 141, 51, 52, 52, 147, 3, 147, 152, 67, 152, 157, 66, 157, 162, 64, 162, 167, 63, 7, 58, 143, 48, 143, 144, 49, 144, 145, 50, 145, 51, 51, 146, 52, 58, 59, 148, 143, 148, 149, 144, 149, 145, 145, 150, 151, 146, 151, 147, 59, 60, 153, 148, 153, 149, 149, 154, 150, 150, 155, 156, 151, 156, 157, 60, 61, 153, 153, 158, 159, 154, 159, 160, 155, 160, 156, 156, 161, 157, 61, 62, 158, 158, 163, 159, 159, 164, 165, 160, 165, 161, 161, 166, 167, 62, 4, 163, 163, 27, 164, 164, 26, 165, 165, 25, 24, 166, 24, 23, 67, 172, 3, 172, 177, 53, 177, 182, 54, 182, 187, 56, 187, 192, 57, 0, 22, 168, 63, 168, 169, 64, 169, 170, 65, 170, 66, 66, 171, 67, 22, 21, 173, 168, 173, 174, 169, 174, 170, 170, 175, 176, 171, 176, 172, 21, 20, 178, 173, 178, 174, 174, 179, 175, 175, 180, 181, 176, 181, 182, 20, 19, 178, 178, 183, 184, 179, 184, 185, 180, 185, 181, 181, 186, 182, 19, 18, 183, 183, 188, 184, 184, 189, 190, 185, 190, 186, 186, 191, 192, 18, 1, 188, 188, 42, 189, 189, 41, 190, 190, 40, 39, 191, 39, 38, 62, 197, 4, 197, 202, 8, 202, 207, 9, 207, 212, 11, 212, 217, 12, 7, 47, 193, 58, 193, 194, 59, 194, 195, 60, 195, 61, 61, 196, 62, 47, 46, 198, 193, 198, 199, 194, 199, 195, 195, 200, 201, 196, 201, 197, 46, 45, 203, 198, 203, 199, 199, 204, 200, 200, 205, 206, 201, 206, 207, 45, 44, 203, 203, 208, 209, 204, 209, 210, 205, 210, 206, 206, 211, 207, 44, 43, 208, 208, 213, 209, 209, 214, 215, 210, 215, 211, 211, 216, 217, 43, 6, 213, 213, 32, 214, 214, 31, 215, 215, 30, 29, 216, 29, 28, 18, 92, 1, 38, 117, 2, 53, 142, 3, 167, 0, 63, 57, 192, 2, 12, 217, 5, 22, 0, 72, 77, 21, 22, 82, 20, 21, 20, 82, 19, 19, 87, 18, 27, 4, 68, 26, 27, 69, 25, 26, 70, 70, 71, 24, 71, 72, 23, 68, 8, 73, 69, 68, 74, 74, 75, 70, 71, 70, 76, 76, 77, 72, 73, 9, 78, 78, 79, 74, 79, 80, 75, 76, 75, 81, 77, 76, 82, 11, 83, 78, 79, 78, 84, 80, 79, 85, 85, 86, 81, 86, 87, 82, 12, 88, 83, 88, 89, 84, 85, 84, 90, 90, 91, 86, 87, 86, 92, 5, 13, 88, 13, 14, 89, 14, 15, 90, 91, 90, 16, 92, 91, 17, 97, 42, 1, 102, 41, 42, 107, 40, 41, 40, 107, 39, 39, 112, 38, 13, 5, 93, 14, 13, 94, 15, 14, 95, 95, 96, 16, 96, 97, 17, 93, 28, 98, 94, 93, 99, 99, 100, 95, 96, 95, 101, 101, 102, 97, 98, 29, 103, 103, 104, 99, 104, 105, 100, 101, 100, 106, 102, 101, 107, 31, 108, 103, 104, 103, 109, 105, 104, 110, 110, 111, 106, 111, 112, 107, 32, 113, 108, 113, 114, 109, 110, 109, 115, 115, 116, 111, 112, 111, 117, 6, 33, 113, 33, 34, 114, 34, 35, 115, 116, 115, 36, 117, 116, 37, 122, 57, 2, 127, 56, 57, 132, 55, 56, 55, 132, 54, 54, 137, 53, 33, 6, 118, 34, 33, 119, 35, 34, 120, 120, 121, 36, 121, 122, 37, 118, 43, 123, 119, 118, 124, 124, 125, 120, 121, 120, 126, 126, 127, 122, 123, 44, 128, 128, 129, 124, 129, 130, 125, 126, 125, 131, 127, 126, 132, 46, 133, 128, 129, 128, 134, 130, 129, 135, 135, 136, 131, 136, 137, 132, 47, 138, 133, 138, 139, 134, 135, 134, 140, 140, 141, 136, 137, 136, 142, 7, 48, 138, 48, 49, 139, 49, 50, 140, 141, 140, 51, 142, 141, 52, 147, 67, 3, 152, 66, 67, 157, 65, 66, 65, 157, 64, 64, 162, 63, 48, 7, 143, 49, 48, 144, 50, 49, 145, 145, 146, 51, 146, 147, 52, 143, 58, 148, 144, 143, 149, 149, 150, 145, 146, 145, 151, 151, 152, 147, 148, 59, 153, 153, 154, 149, 154, 155, 150, 151, 150, 156, 152, 151, 157, 61, 158, 153, 154, 153, 159, 155, 154, 160, 160, 161, 156, 161, 162, 157, 62, 163, 158, 163, 164, 159, 160, 159, 165, 165, 166, 161, 162, 161, 167, 4, 27, 163, 27, 26, 164, 26, 25, 165, 166, 165, 24, 167, 166, 23, 172, 53, 3, 177, 54, 53, 182, 55, 54, 55, 182, 56, 56, 187, 57, 63, 0, 168, 64, 63, 169, 65, 64, 170, 170, 171, 66, 171, 172, 67, 168, 22, 173, 169, 168, 174, 174, 175, 170, 171, 170, 176, 176, 177, 172, 173, 21, 178, 178, 179, 174, 179, 180, 175, 176, 175, 181, 177, 176, 182, 19, 183, 178, 179, 178, 184, 180, 179, 185, 185, 186, 181, 186, 187, 182, 18, 188, 183, 188, 189, 184, 185, 184, 190, 190, 191, 186, 187, 186, 192, 1, 42, 188, 42, 41, 189, 41, 40, 190, 191, 190, 39, 192, 191, 38, 197, 8, 4, 202, 9, 8, 207, 10, 9, 10, 207, 11, 11, 212, 12, 58, 7, 193, 59, 58, 194, 60, 59, 195, 195, 196, 61, 196, 197, 62, 193, 47, 198, 194, 193, 199, 199, 200, 195, 196, 195, 201, 201, 202, 197, 198, 46, 203, 203, 204, 199, 204, 205, 200, 201, 200, 206, 202, 201, 207, 44, 208, 203, 204, 203, 209, 205, 204, 210, 210, 211, 206, 211, 212, 207, 43, 213, 208, 213, 214, 209, 210, 209, 215, 215, 216, 211, 212, 211, 217, 6, 32, 213, 32, 31, 214, 31, 30, 215, 216, 215, 29, 217, 216, 28];

RES.cPaddle.s_afVertexDataLow =
[-3.6, -0.55, -1.0,  0.0,  0.0, -0.57735, -0.57735, -0.57735,
 -3.6,  0.55, -1.0,  0.0,  0.0, -0.57735,  0.57735, -0.57735,
  3.6, -0.55, -1.0,  0.0,  0.0,  0.57735, -0.57735, -0.57735,
  3.6,  0.55, -1.0,  0.0,  0.0,  0.57735,  0.57735, -0.57735,
 -3.6, -0.55,  1.0,  0.0,  0.0, -0.57735, -0.57735,  0.57735,
 -3.6,  0.55,  1.0,  0.0,  0.0, -0.57735,  0.57735,  0.57735,
  3.6, -0.55,  1.0,  0.0,  0.0,  0.57735, -0.57735,  0.57735,
  3.6,  0.55,  1.0,  0.0,  0.0,  0.57735,  0.57735,  0.57735];

RES.cPaddle.s_aiIndexDataLow =
[4, 6, 5, 5, 6, 7, 1, 0, 5, 5, 0, 4, 0, 2, 4, 4, 2, 6, 2, 3, 6, 6, 3, 7, 3, 1, 7, 7, 1, 5, 1, 3, 0, 0, 3, 2];

RES.cPaddle.s_sVertexShader =
"attribute vec3  a_v3Position;"                                                  +
"attribute vec3  a_v3Normal;"                                                    +
"uniform   mat4  u_m4ModelViewProj;"                                             +
"uniform   mat4  u_m4ModelView;"                                                 +
"uniform   float u_fLength;"                                                     +
"uniform   float u_fLengthDiv;"                                                  +
"varying   vec3  v_v3Relative;"                                                  +
"varying   vec3  v_v3Normal;"                                                    +
""                                                                               +
"void main()"                                                                    +
"{"                                                                              +
"    vec3 v3Stretch = a_v3Position;"                                             +
"    v3Stretch.x    = (v3Stretch.x + u_fLength*sign(v3Stretch.x))*u_fLengthDiv;" +
""                                                                               +
"    v_v3Relative = (u_m4ModelView * vec4(v3Stretch, 1.0)).xyz;"                 +
"    v_v3Normal   = a_v3Normal;"                                                 +
""                                                                               +
"    gl_Position  = u_m4ModelViewProj * vec4(v3Stretch, 1.0);"                   +
"}";

RES.cPaddle.s_sFragmentShader =
"precision mediump float;"                                                    +
""                                                                            +
"uniform vec3 u_v3Color;"                                                     +
"varying vec3 v_v3Relative;"                                                  +
"varying vec3 v_v3Normal;"                                                    +
""                                                                            +
"void main()"                                                                 +
"{"                                                                           +
"    const vec3 v3Camera = vec3(0.0, 0.447213650, -0.894427299);"             +
"    const vec3 v3Light  = vec3(0.0,         0.0,          1.0);"             +
""                                                                            +
"    float fIntensity = 52.0 * inversesqrt(dot(v_v3Relative, v_v3Relative));" +
"    fIntensity      *= dot(normalize(v_v3Relative), v3Camera);"              +
""                                                                            +
"    fIntensity *= dot(normalize(v_v3Normal), v3Light)*0.5+0.5;"              +
""                                                                            +
"    gl_FragColor = vec4(u_v3Color*fIntensity, 1.0);"                         +
"}";


// ****************************************************************
RES.cPlane = {};
RES.cPlane.s_afVertexData =
[-35.0, -35.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,
 -35.0,  35.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,
  35.0, -35.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,
  35.0,  35.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0];

RES.cPlane.s_aiIndexData =
[0, 2, 1, 1, 2, 3];

RES.cPlane.s_sVertexShader =
"attribute vec3 a_v3Position;"                                      +
"uniform   mat4 u_m4ModelViewProj;"                                 +
"uniform   mat4 u_m4ModelView;"                                     +
"varying   vec3 v_v3Relative;"                                      +
"varying   vec2 v_v2Border;"                                        +
"varying   vec2 v_v2TexCoord;"                                      +
""                                                                  +
"void main()"                                                       +
"{"                                                                 +
"    v_v3Relative = (u_m4ModelView * vec4(a_v3Position, 1.0)).xyz;" +
"    v_v2Border   = a_v3Position.xy;"                               +
"    v_v2TexCoord = a_v3Position.xy*0.042857143 + 0.5;"             + // 3.0/70.0 = 0.042857143
""                                                                  +
"    gl_Position = u_m4ModelViewProj * vec4(a_v3Position, 1.0);"    +
"}";

RES.cPlane.s_sFragmentShader =
"precision mediump float;"                                                    +
""                                                                            +
"uniform sampler2D u_s2Texture;"                                              +
"varying vec3      v_v3Relative;"                                             +
"varying vec2      v_v2Border;"                                               +
"varying vec2      v_v2TexCoord;"                                             +
""                                                                            +
"void main()"                                                                 +
"{"                                                                           +
"    const vec3 v3Camera = vec3(0.0, 0.447213650, -0.894427299);"             +
""                                                                            +
"    vec2 v2Border = vec2(35.0, 35.0) - abs(v_v2Border);"                     +
"    float fMin    = min(v2Border.x, v2Border.y);"                            +
""                                                                            +
"    vec3 v3Texel = vec3(1.0);"                                               +
"    if(fMin > 24.0) v3Texel = texture2D(u_s2Texture, v_v2TexCoord).rgb;"     +
""                                                                            +
"    float fIntensity = 59.0 * inversesqrt(dot(v_v3Relative, v_v3Relative));" +
"    fIntensity      *= dot(normalize(v_v3Relative), v3Camera);"              +
""                                                                            +
"    float fValue = min(fMin*0.5 + 0.25, 1.0);"                               +
""                                                                            +
"    gl_FragColor = vec4(v3Texel*fIntensity*fValue, 1.0);"                    +
"}";


// ****************************************************************
RES.cShadow = {};
RES.cShadow.s_sVertexShaderObject =   // #OBJECT
"attribute vec3  a_v3Position;"                                  +
"uniform   mat4  u_m4ModelViewProj;"                             +
"uniform   mat3  u_m3Normal;"                                    +
"varying   float v_fHeight;"                                     +
""                                                               +
"void main()"                                                    +
"{"                                                              +
"    v_fHeight   = (u_m3Normal * a_v3Position).z;"               +
"    gl_Position = u_m4ModelViewProj * vec4(a_v3Position, 1.0);" +
"}";

RES.cShadow.s_sFragmentShaderObject =   // #OBJECT
"precision mediump float;"                     +
""                                             +
"varying float v_fHeight;"                     +
""                                             +
"void main()"                                  +
"{"                                            +
"    if(v_fHeight >= -0.001) discard;"         +
"    gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);" +
"}";

RES.cShadow.s_sVertexShaderLayer =   // #LAYER
"attribute vec3 a_v3Position;"               +
""                                           +
"void main()"                                +
"{"                                          +
"    gl_Position = vec4(a_v3Position, 1.0);" +
"}";

RES.cShadow.s_sFragmentShaderLayer =   // #LAYER
"precision mediump float;"                     +
""                                             +
"void main()"                                  +
"{"                                            +
"    gl_FragColor = vec4(0.0, 0.0, 0.0, 0.2);" +
"}";